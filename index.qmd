---
#title: "`{ggstatsplot}`: Informative Statistical Visualizations"
#author: "Indrajeet Patil"
#affiliation: 
format:
  revealjs: 
    theme: simple
    slide-number: true
    preview-links: auto
    code-link: true
    #footer: "Source code for these slides can be found [on GitHub](https://github.com/IndrajeetPatil/ggstatsplot_slides){target='_blank'}."
    fig-dpi: 300
execute:
  echo: true
  eval: true
  warning: false
  message: false
  cache: true
editor: 
  markdown: 
    wrap: 120
---

## {ggstatsplot}: Informative Statistical Visualizations {style="margin-top: 1em;"}

<!-- Don't render this file manually. Run `renderer.R` script instead. -->

<!-- Need to install extension from https://github.com/quarto-ext/fontawesome -->

<!-- Run `quarto install extension quarto-ext/fontawesome` in terminal -->

::: {style="margin-top: 0.5em; margin-bottom: 0.5em; font-size: 1em"}
Indrajeet Patil
:::

::: {style="margin-top: 1em; font-size:0.75em"}
![](media/logo.png){.relative fig-align="center" width="350" height="350"}
:::

## Plan {.smaller}

-   Why `ggstatsplot`?

-   Primary functions

-   Customizability

-   Benefits

-   Misconceptions

-   Limitations

## Raison d'√™tre {.smaller}

::::: columns
::: {.column width="50%"}
Current CRAN package count **\>23,000**

![](media/y_tho.jpg){width="400"}
:::

::: {.column width="50%"}
<br> <br> <br> `{ggstatsplot}` provides <br> <br> üìä information-rich plots with statistical details <br> <br> üìù
suitable for faster (exploratory) data analysis and scholarly reports <br>
:::
:::::

## Informative graphic = a thousand words {.smaller}

![](media/datasaurus.gif)

::: footer
[(Matejka & Fitzmaurice, *Autodesk Research*,2017)](https://www.autodeskresearch.com/publications/samestats)
:::

**Graphical** summaries can reveal problems not visible from **numerical** statistics.

## Ready-made plot = no customization {.smaller}

The **grammar of graphics** is a powerful framework [(Wilkinson,
2011)](https://www.google.com/books/edition/_/iI1kcgAACAAJ?hl=en&sa=X&ved=2ahUKEwiGl8rJ2KztAhWyElkFHa8NAvkQre8FMBR6BAgMEAc)
and can help you make *any* graphics fitting your specific data visualization needs! But...

. . .

::::: columns
::: {.column width="50%"}
![](media/power.jpg)
:::

::: {.column width="50%"}
![](media/cat_trademill.gif)
:::
:::::

## Simpler/faster data analysis workflow {.smaller}

![](media/ds_workflow.png)

::: footer
[(Grolemund & Wickham, *R for Data Science*, 2017)](https://r4ds.had.co.nz/)
:::

. . .

In a typical *exploratory* data analysis workflow, **data visualization** and **statistical modeling** are two different
phases: visualization informs modeling, and modeling can suggest a different visualization, and so on and so forth. <br>

. . .

:::{.callout-tip collapse=false appearance='default' icon=true}
## Central idea of `{ggstatsplot}`
Simple: combine these two phases into one!
:::

## And a LOT more! {.smaller}

...but we will come back to that later üìå

Let's get started first!

<br>

. . .

Package available for installation on CRAN and GitHub:

| Type        | Command                                  |
| :---------- | :--------------------------------------- |
| Release     | `install.packages("ggstatsplot")`        |
| Development | `pak::pak("IndrajeetPatil/ggstatsplot")` |

```{r}
#| include: false
#| echo: false
library(ggstatsplot)
library(ggplot2)
```


# Example function

## `ggbetweenstats()` {.smaller}

For between-group comparisons

:::: {.columns}

::: {.column width='65%'}
```{r}
#| label: "ggbetweenstats_1"
ggbetweenstats(
  data  = iris,
  x     = Species,
  y     = Sepal.Length,
  title = "Distribution of sepal length across Iris species"
)
```
:::

::: {.column width='35%'}
:::{.callout-important collapse=false appearance='default' icon=true}
## 

‚úèÔ∏è **Defaults**

-  raw data + distributions 
-  descriptive statistics
-  inferential statistics
-  effect size + uncertainty
-  pairwise comparisons
-  Bayesian hypothesis-testing 
-  Bayesian estimation

**Statistical approaches available**

-  parametric 
-  parametric 
-  robust 
-  Bayesian

:::

:::

::::

## Other functions {.smaller}

![](media/collage.jpeg)


# Why use `{ggstatsplot}`? üëçÔ∏è

## Results *in context* of the data üïµÔ∏è {.smaller}

:::: {.columns}

::: {.column width='50%'}
**Standard approach**

Pearson's correlation test revealed that, across 142 participants, variable `x` was negatively correlated with variable
`y`: $t(140)=-0.76, p=.446$. The effect size $(r=-0.06, 95\% CI [-.23,.10])$ was small, as per Cohen‚Äôs (1988)
conventions. The Bayes Factor for the same analysis revealed that the data were `r round(exp(1.76), 2)` times more
probable under the null hypothesis as compared to the alternative hypothesis. This can be considered moderate evidence
(Jeffreys, 1961) in favor of the null hypothesis (absence of any correlation between `x` and `y`).
:::

::: {.column width='50%'}
**`{ggstatsplot}` approach**

![](media/after_ggstats.PNG)

:::

::::


## Toggling statistical approaches üîÄ {.smaller}

:::: {.columns}

::: {.column width='50%'}

**Parametric**

```{.r code-line-numbers="6,14,22"}
# anova
ggbetweenstats(
  data = mtcars,
  x = cyl,
  y = wt,
  type = "p" 
)

# correlation analysis
ggscatterstats(
  data = mtcars,
  x = wt,
  y = mpg,
  type = "p" 
)

# t-test
gghistostats(
  data = mtcars,
  x = wt,
  test.value = 2,
  type = "p" 
)
```
:::

::: {.column width='50%'}

**Non-parametric**

```{.r code-line-numbers="6,14,22"}
# anova
ggbetweenstats(
  data = mtcars,
  x = cyl,
  y = wt,
  type = "np" 
)

# correlation analysis
ggscatterstats(
  data = mtcars,
  x = wt,
  y = mpg,
  type = "np" 
)

# t-test
gghistostats(
  data = mtcars,
  x = wt,
  test.value = 2,
  type = "np" 
)
```

:::

::::


## Alternative to painful workflow {.smaller}

:::: {.columns}

::: {.column width='60%'}
**Load 'em up!**

üì¶ for inferential statistics (e.g. `stats`) <br> üì¶ computing effect size + CIs (e.g. `effectsize`) <br> üì¶ for
descriptives (e.g. `skimr`) <br> üì¶ pairwise comparisons (e.g. `multcomp`) <br> üì¶ Bayesian hypothesis testing (e.g.
`BayesFactor`) <br> üì¶ Bayesian estimation (e.g. `bayestestR`) <br> üì¶ . <br> 

![](media/packages.gif)
:::

::: {.column width='40%'}
**Things to worry about** ü§ï

ü§î accepts dataframe, vector, matrix? <br> ü§î long/wide format data? <br> ü§î works with `NA`s? <br> ü§î returns list,
dataframe, arrays? <br> ü§î works with tibbles? <br> ü§î has all necessary details? <br> ü§î . <br>

![](media/monkey.gif)
:::

::::


# Plot Customizability

"What if I don't like the default plots?" ü§î

## Changing aesthetics üé® {.smaller}

:::: {.columns}

::: {.column width='50%'}

```{r ggbetweenstats_4}
ggbetweenstats(
  data = movies_long,
  x = mpaa,
  y = rating,
  ggtheme = ggthemes::theme_economist(), 
  palette = "Darjeeling2", 
  package = "wesanderson" 
)
```

:::

::: {.column width='50%'}
Aesthetic preferences not an excuse to avoid `{ggstatsplot}`! üòª
Any ggplot theme or palette can be used. 
<br> <br>
N.B. The default palette is **colorblind-friendly**.
:::

::::


## Modification with `{ggplot2}` üõ† {.smaller}

You can modify `{ggstatsplot}` plots further using `{ggplot2}` functions. üéâ

```{r ggbetweenstats_5}
ggbetweenstats(
  data = mtcars,
  x = am,
  y = wt,
  type = "bayes"
) +
  scale_y_continuous(sec.axis = dup_axis()) 
```

## Too much information üôà {.smaller}

. . . 

:::: {.columns}

::: {.column width='40%'}

Get **only plots**:

```{.r}
ggbetweenstats(
  data = iris,
  x = Species,
  y = Sepal.Length,
  # turn off statistical analysis
  centrality.plotting = FALSE, 
  results.subtitle = FALSE, 
  bf.message = FALSE, 
  # turn off pairwise comparisons
  pairwise.display = "none" 
)
```
:::

::: {.column width='60%'}

```{r}
#| label: "ggbetweenstats_only_plot"
#| echo: false
ggbetweenstats(
  data = iris,
  x = Species,
  y = Sepal.Length,
  # turn off statistical analysis
  centrality.plotting = FALSE, 
  results.subtitle = FALSE, 
  bf.message = FALSE, 
  # turn off pairwise comparisons
  pairwise.display = "none" 
)
```

:::

::::

. . . 

:::: {.columns}

::: {.column width='40%'}

Get **only expressions**:

```{.r}
stats_expr <- ggpiestats(
  Titanic_full, Survived, Sex,
) %>% extract_subtitle()

ggiraphExtra::ggSpine( 
  data = Titanic_full,
  aes(x = Sex, fill = Survived)
) +
  labs(subtitle = stats_expr)  
```
:::

::: {.column width='60%'}
```{r subtitle_1}
#| label: "ggpiestats_only_plot"
#| echo: false
stats_expr <- ggpiestats(
  Titanic_full, Survived, Sex,
) %>% extract_subtitle()

ggiraphExtra::ggSpine( 
  data = Titanic_full,
  aes(x = Sex, fill = Survived)
) +
  labs(subtitle = stats_expr) 
```
:::

::::


# Problems

## "Golem of Prague" issue {.smaller}

:::: {.columns}

::: {.column width='40%'}
Promotes mindless application of statistical tests.

Easy-to-use software can lead to misuse.
:::

::: {.column width='60%'}
![](media/golem-problem.jpeg)
:::

::::

. . .

### Clunky API {.smaller}

:::: {.columns}

::: {.column width='50%'}
- Too many arguments to remember.
- Not a "real" ggplot2 extension.
:::

::: {.column width='50%'}
- Limited number of functions.
- Expects non-trivial statistical proficiency.
:::

::::

# Positives

## Quality Assurance {.smaller}

:::: {.columns}

::: {.column width='50%'}

Each commit must pass many QA checks:

![](media/pr-qa.png)

:::{.callout-note collapse=false appearance='default' icon=true}

## CI Checks (GitHub Actions)

- Unit tests (random-order)
- Code coverage (100%)
- Linting (0 lints)
- Formatting (0 issues)
- Documentation (website, link rot, examples)
- CRAN checks (0 E, 0 W, 0 N)
- Pre-commit hooks (0 issues)
- Portability (Linux, macOS, Windows)
- Robustness (dependencies, R versions)

:::

:::

::: {.column width='50%'}

Healthy code base:

[![](media/refactoring.png)](https://indrajeetpatil.github.io/refactoring-ggstatsplot/refactoring-ggstatsplot#1)

:::

::::

## Reception {.smaller}

:::: {.columns}

::: {.column width='50%'}

:::{.callout-important collapse=false appearance='default' icon=true}

## Total downloads > **500K** (97 percentile)

```{r}
library(packageRank)
plot(
  cranDownloads("ggstatsplot", from = "2018-04-03", to = Sys.Date()),
  graphics = "ggplot2", smooth = TRUE
)
```

:::

![](media/ggstats-stars.png)

:::

::: {.column width='50%'}

:::{.callout-tip collapse=false appearance='default' icon=true}

## Total citations > **1000**

![](media/ggstats-paper.png)
:::

![](media/ggstats-citations.png)

:::

::::

# Conclusion 

## Exploring data made easy! üòâ {.smaller}

In summary, the `ggstatsplot` approach- <br> <br> 
(*a*) avoids errors in statistical reporting, <br> <br> 
(*b*) highlights the importance of the effect by providing effect size measures by default, <br> <br> 
(*c*) provides an easy way to evaluate *absence* of an effect using Bayesian framework, <br> <br> 
(*d*) demands to evaluate statistical analysis in the context of the underlying data, <br> <br> 
and is (*e*) easy and (*f*) simple enough that somebody with little coding experience can use it without making an error.

# For more

Source code for these slides can be found [on GitHub](https://github.com/IndrajeetPatil/ggstatsplot_slides){target='_blank'}.

If you are interested in good programming and software development practices, check out my other [slide
decks](https://sites.google.com/site/indrajeetspatilmorality/presentations){target="_blank"}.

# Find me at...

{{< fa brands twitter >}} [Twitter](http://twitter.com/patilindrajeets){target="_blank"}

{{< fa brands linkedin >}} [LikedIn](https://www.linkedin.com/in/indrajeet-patil-397865174/){target="_blank"}

{{< fa brands github >}} [GitHub](http://github.com/IndrajeetPatil){target="_blank"}

{{< fa solid link >}} [Website](https://sites.google.com/site/indrajeetspatilmorality/){target="_blank"}

{{< fa solid envelope >}} [E-mail](mailto:patilindrajeet.science@gmail.com){target="_blank"}

# Thank You üòä

## Session information {.smaller}

```{r}
sessioninfo::session_info(include_base = TRUE)
```

# Appendix

# Examples of other functions

## `ggwithinstats()` {.smaller}

Hypothesis about group differences: repeated measures design

:::: {.columns}

::: {.column width='65%'}
```{r}
#| label: "ggwithinstats_1"
ggwithinstats(
  data = WRS2::WineTasting,
  x = Wine,
  y = Taste
)
```
:::

::: {.column width='35%'}
:::{.callout-important collapse=false appearance='default' icon=true}
## 

‚úèÔ∏è **Defaults**

-  raw data + distributions 
-  descriptive statistics
-  inferential statistics
-  effect size + uncertainty
-  pairwise comparisons
-  Bayesian hypothesis-testing 
-  Bayesian estimation

**Statistical approaches available**

-  parametric 
-  parametric 
-  robust 
-  Bayesian

:::

:::

::::

## `gghistostats()` {.smaller}

Distribution of a numeric variable

:::: {.columns}

::: {.column width='65%'}

```{r}
#| label: "gghistostats_1"
gghistostats(
  data = movies_long,
  x = budget,
  test.value = 30 
)
```
:::

::: {.column width='35%'}
:::{.callout-important collapse=false appearance='default' icon=true}
## 

‚úèÔ∏è **Defaults**

-  counts + proportion for bins
-  descriptive statistics
-  inferential statistics
-  effect size + uncertainty
-  pairwise comparisons
-  Bayesian hypothesis-testing 
-  Bayesian estimation

**Statistical approaches available**

-  parametric 
-  parametric 
-  robust 
-  Bayesian

:::

:::

::::

## `ggdotplotstats()` {.smaller}

Labeled numeric variable

:::: {.columns}

::: {.column width='65%'}

```{r}
#| label: "ggdotplotstats_1"
ggdotplotstats(
  data = movies_long,
  x = budget,
  y = genre,
  test.value = 30 
)
```
:::

::: {.column width='35%'}
:::{.callout-important collapse=false appearance='default' icon=true}
## 

‚úèÔ∏è **Defaults**

-  descriptive statistics
-  inferential statistics
-  effect size + uncertainty
-  pairwise comparisons
-  Bayesian hypothesis-testing 
-  Bayesian estimation

**Statistical approaches available**

-  parametric 
-  parametric 
-  robust 
-  Bayesian

:::

:::

::::

## `ggscatterstats()` {.smaller}

Hypothesis about correlation: Two numeric variables

:::: {.columns}

::: {.column width='65%'}

```{r}
#| label: "ggscatterstats_1"
ggscatterstats(
  data = movies_long,
  x = budget,
  y = rating
)
```
:::

::: {.column width='35%'}
:::{.callout-important collapse=false appearance='default' icon=true}
## 

‚úèÔ∏è **Defaults**

-  joint distribution
-  marginal distribution
-  effect size + uncertainty
-  pairwise comparisons
-  Bayesian hypothesis-testing 
-  Bayesian estimation

**Statistical approaches available**

-  parametric 
-  parametric 
-  robust 
-  Bayesian

:::

:::

::::

## `ggcorrmat()` {.smaller}

Hypothesis about correlation: Multiple numeric variables

:::: {.columns}

::: {.column width='65%'}

```{r}
#| label: "ggcorrmat_1"
ggcorrmat(dplyr::starwars)
```
:::

::: {.column width='35%'}
:::{.callout-important collapse=false appearance='default' icon=true}
## 

‚úèÔ∏è **Defaults**

-  inferential statistics
-  effect size + uncertainty
-  careful handling of `NA`s
-  partial correlations

**Statistical approaches available**

-  parametric 
-  parametric 
-  robust 
-  Bayesian

:::

:::

::::


## `ggpiestats()` {.smaller}

Hypothesis about composition of categorical variables

:::: {.columns}

::: {.column width='65%'}

```{r}
#| label: "ggpiestats_1"
ggpiestats(
  data = mtcars,
  x = am,
  y = cyl
)
```
:::

::: {.column width='35%'}
:::{.callout-important collapse=false appearance='default' icon=true}
## 

‚úèÔ∏è **Defaults**

-  descriptive statistics
-  inferential statistics
-  effect size + uncertainty
-  goodness-of-fit tests
-  Bayesian hypothesis-testing 
-  Bayesian estimation

:::

:::

::::

## `ggbarstats()` {.smaller}

Hypothesis about composition of categorical variables

:::: {.columns}

::: {.column width='65%'}

```{r}
#| label: "ggbarstats_1"
ggbarstats(
  data = mtcars,
  x = am,
  y = cyl
)
```
:::

::: {.column width='35%'}
:::{.callout-important collapse=false appearance='default' icon=true}
## 

‚úèÔ∏è **Defaults**

-  descriptive statistics
-  inferential statistics
-  effect size + uncertainty
-  goodness-of-fit tests
-  Bayesian hypothesis-testing 
-  Bayesian estimation

:::

:::

::::

## `ggcoefstats()` {.smaller}

Hypothesis about regression coefficients

:::: {.columns}

::: {.column width='65%'}

```{r}
#| label: "ggcoefstats_1"
mod <- lm(
  formula = rating ~ mpaa,
  data = movies_long
)

ggcoefstats(mod)
```
:::

::: {.column width='35%'}
:::{.callout-important collapse=false appearance='default' icon=true}
## 

‚úèÔ∏è **Defaults**

-  estimate + uncertainty
-  inferential statistics ($t$, $z$, $F$, $\chi^2$)
-  model fit indices (AIC + BIC)

Supports all regression models supported in [`{easystats}`](https://easystats.github.io/insight/reference/is_model_supported.html) ecosystem.

Meta-analysis is also supported!

:::

:::

::::


# *grouped\_* variants of all functions

Iterating over a grouping variable

## *grouped\_* functions {.smaller}

:::: {.columns}

::: {.column width='60%'}
```{r grouped_1}
grouped_ggpiestats(
  data = mtcars,
  x = cyl,
  grouping.var = am 
)
```
:::

::: {.column width='40%'}

Available `grouped_` variants:

- `grouped_ggbetweenstats()` 
- `grouped_ggwithinstats()` 
- `grouped_gghistostats()` 
- `grouped_ggdotplotstats()` 
- `grouped_ggscatterstats()` 
- `grouped_ggcorrmat()` 
- `grouped_ggpiestats()` 
- `grouped_ggbarstats()`

:::

::::


# More `{ggstatsplot}` benefits 

## Supports different statistical approaches {.smaller}

:::{.callout-note collapse=false appearance='default' icon=true}
## 

| Functions                            | Description                                       | Parametric | Non-parametric | Robust | Bayesian |
| :----------------------------------- | :------------------------------------------------ | :--------- | :------------- | :----- | :------- |
| `ggbetweenstats()`                   | Between group comparisons                         | ‚úÖ         | ‚úÖ             | ‚úÖ     | ‚úÖ       |
| `ggwithinstats()`                    | Within group comparisons                          | ‚úÖ         | ‚úÖ             | ‚úÖ     | ‚úÖ       |
| `gghistostats()`, `ggdotplotstats()` | Distribution of a numeric variable                | ‚úÖ         | ‚úÖ             | ‚úÖ     | ‚úÖ       |
| `ggcorrmat()`                        | Correlation matrix                                | ‚úÖ         | ‚úÖ             | ‚úÖ     | ‚úÖ       |
| `ggscatterstats()`                   | Correlation between two variables                 | ‚úÖ         | ‚úÖ             | ‚úÖ     | ‚úÖ       |
| `ggpiestats()`, `ggbarstats()`       | Association between categorical variables         | ‚úÖ         | `NA`           | `NA`   | ‚úÖ       |
| `ggpiestats()`, `ggbarstats()`       | Equal proportions for categorical variable levels | ‚úÖ         | `NA`           | `NA`   | ‚úÖ       |
| `ggcoefstats()`                      | Regression modeling                               | ‚úÖ         | ‚úÖ             | ‚úÖ     | ‚úÖ       |
| `ggcoefstats()`                      | Random-effects meta-analysis                      | ‚úÖ         | `NA`           | ‚úÖ     | ‚úÖ       |

:::

## Best practices in statistical reporting üèÜ {.smaller}

![](media/stats_reporting_format.png)

## Avoiding reporting errors {.smaller}

. . .

"half of all published psychology papers that use NHST contained at least one *p*-value that was inconsistent with its
test statistic and degrees of freedom. One in eight papers contained a grossly inconsistent *p*-value that may have
affected the statistical conclusion"

[(Nuijten et al., *Behavior Research Methods*, 2016)](https://link.springer.com/article/10.3758/s13428-015-0664-2)

. . .

Since the plot and the statistical analysis are yoked together, the chances of making an error in reporting the results
are minimized.

. . .

No need to worry about updating figures and statistical details **separately**. üîó

## Making sense of null results {.smaller}

. . .

$p > 0.05$: The null hypothesis (`H0`) can't be rejected

But can it be **accepted**?! Null Hypothesis Significance Testing ü§´

. . .

> "In 72% of cases, nonsignificant results were misinterpreted, in that the authors inferred that the effect was absent.
> A Bayesian reanalysis revealed that fewer than 5% of the nonsignificant findings provided strong evidence (i.e.,
> $BF_{01} > 10$) in favor of the null hypothesis over the alternative hypothesis."

[(Aczel et al., *AMPPS*, 2018)](https://journals.sagepub.com/doi/pdf/10.1177/2515245918773742)

. . .

Juxtaposing frequentist and Bayesian statistics for the same analysis helps to properly interpret the null results.

## A few other benefits {.smaller}

. . .

Minimal code needed (`data`, `x`, `y`): minimizes chances of error + tidy scripts. üíÖ

. . .

Disembodied figures stand on their own and are easy to evaluate. üßê

. . .

More breathing room for theoretical discussion and other text. ‚úç

## Misconceptions: This package is... {.smaller}

. . .

 <br>
‚ùå an alternative to learning `ggplot2` <br> 
‚úÖ the more you know `ggplot2`, the better you can modify the defaults to your liking) <br>
<br>

. . .

‚ùå meant to be used in talks/presentations <br> 
‚úÖ defaults too complicated for effectively communicating results in time-constrained presentation settings, e.g. conference talks) <br>
<br>

. . .

‚ùå only relevant when used in publications <br> 
‚úÖ not necessary; can also be useful *only* during exploratory phase <br> 
<br>

. . .

‚ùå the only game in town <br> 
‚úÖ excellent GUI open-source software: [JASP](https://jasp-stats.org/) and [jamovi](https://www.jamovi.org/)) 

